# # -*- coding: utf-8 -*-
# """Search Agent.ipynb

# Automatically generated by Colab.

# Original file is located at
#     https://colab.research.google.com/drive/1WgSFiFu1dbUw93-Pwv3K_KP1AuBenZjC

# # ðŸ§  Search Agent (PraisonAI Edition)

# A minimal example of using PraisonAI's Agent with a custom internet search tool in Python, ready for Google Colab.

# [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/DhivyaBharathy-web/PraisonAI/blob/main/examples/cookbooks/MemoryPal_Search_Agent.ipynb)

# # Install Dependencies
# """

# !pip install praisonaiagents duckduckgo-search

# """# Set API Key"""

import os

# Enter your OpenAI API key here
os.environ['OPENAI_API_KEY'] = 'Enter your api key'  # <-- Replace with your OpenAI API key

# """# Tool Definition"""

from duckduckgo_search import DDGS

def internet_search_tool(query: str):
    results = []
    ddgs = DDGS()
    for result in ddgs.text(keywords=query, max_results=5):
        results.append({
            'title': result.get('title', ''),
            'url': result.get('href', ''),
            'snippet': result.get('body', '')
        })
    return results

# """# YAML Agent Config"""

import yaml

yaml_config = """
framework: praisonai
topic: internet search demo
roles:
  searcher:
    backstory: Expert in internet search.
    goal: Find information online.
    role: Searcher
    tools:
      - internet_search_tool
    tasks:
      search_task:
        description: Search for 'AI job trends in 2025'.
        expected_output: List of search results.
"""

config = yaml.safe_load(yaml_config)
print(config)

# """# Prompt Example

# Example prompt to use with the agent:  
# `Search about AI job trends in 2025`

# Main: Run the Agent
# """

from praisonaiagents import Agent

agent = Agent(
    instructions="You are an AI assistant with internet search capabilities.",
    tools=[internet_search_tool]
)

# Main: Ask a question
query = 'AI job trends in 2025'  # You can change this prompt
response = agent.start(query)
print('Response:')
print(response)
